{"version":3,"sources":["img/profileCopy.jpg","logo.svg","components/userCard/userCard.js","components/navbar/navbar.js","components/home/home.js","components/about/about.js","components/projects/project.js","components/Route/route.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","UserCard","className","src","profileImage","alt","href","NavBar","to","Home","About","Project","Routes","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kHAAAA,EAAOC,QAAU,IAA0B,yC,wECA3CD,EAAOC,QAAU,IAA0B,kC,uPC2B5BC,MAtBf,WACI,OACI,yBAAKC,UAAU,QACX,yBAAKA,UAAU,eAAeC,IAAKC,IAAcC,IAAI,YACrD,gDACA,uBAAGH,UAAU,SAAb,wCACA,iDACA,yBAAKA,UAAU,aACX,uBAAGI,KAAK,sCAAqC,uBAAGJ,UAAU,kBAC1D,uBAAGI,KAAK,iDAAgD,uBAAGJ,UAAU,oBACrE,uBAAGI,KAAK,gDAA+C,uBAAGJ,UAAU,qBAGxE,2BACI,8C,eCGDK,MAlBf,WACI,OACI,yBAAKL,UAAU,yBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,iBACX,uBAAGA,UAAU,gBAAb,gBAEJ,wBAAIA,UAAU,kBACV,4BAAI,kBAAC,IAAD,CAAMM,GAAG,iBAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,UAAT,aACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAT,aACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,KAAT,e,aCLTC,MAPf,WACI,OACI,yBAAKP,UAAU,YAAf,sB,MCoBOQ,MAtBf,WACI,OACI,yBAAKR,UAAU,aAAf,6cAKI,6BACA,6BANJ,weAWI,6BACA,6BAZJ,sP,YCuCOS,MAzCf,WACI,OACI,yBAAKT,UAAU,aACX,4BACI,4BAAI,wEACA,4BACI,uCACA,uCACA,yCAIR,6BAEA,gCAAK,0EACD,4BACI,uCACA,uCACA,yCAKZ,6BACI,2CACI,4BACI,uCACA,uCACA,4CCVTU,MAZf,WACI,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,gBAAgBC,UAAWN,IAC7C,kBAAC,IAAD,CAAOK,KAAK,SAASC,UAAWL,IAChC,kBAAC,IAAD,CAAOI,KAAK,WAAWC,UAAWJ,MCoB/BK,MAxBf,WACE,OACE,kBAAC,IAAD,KAEE,yBAAKd,UAAU,OACb,4BAAQA,UAAU,cAGhB,kBAAC,EAAD,MACA,yBAAKA,UAAU,uBACf,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQA,UAAU,uBCTRe,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.bd1521e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profileCopy.9ef3842c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\nimport './userCard.css'\r\nimport profileImage from '../../img/profileCopy.jpg'\r\n\r\n\r\nfunction UserCard() {\r\n    return (\r\n        <div className=\"card\">\r\n            <img className=\"profileImage\" src={profileImage} alt=\"Atharva\" />\r\n            <h3>Atharva Paranjpe</h3>\r\n            <p className=\"title\">Student, Machine Learning Enthusiast</p>\r\n            <p>Rutgers University</p>\r\n            <div className=\"linkClass\">\r\n                <a href=\"https://github.com/AtharvaParanjpe\"><i className=\"fa fa-github\"></i></a>\r\n                <a href=\"https://www.linkedin.com/in/atharva-paranjpe/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                <a href=\"https://www.facebook.com/atharva.paranjpe.1/\"><i className=\"fa fa-facebook\"></i></a>\r\n\r\n            </div>\r\n            <p>\r\n                <button>\r\n                    Contact\r\n                </button>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserCard","import React from 'react'\r\nimport './navbar.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction NavBar() {\r\n    return (\r\n        <nav className=\"navbar navbar-inverse\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"navbar-header\">\r\n                    <a className=\"navbar-brand\">My Profile </a>\r\n                </div>\r\n                <ul className=\"nav navbar-nav\">\r\n                    <li><Link to=\"/my-github-io\">Home</Link></li>\r\n                    <li><Link to=\"/about\">About Me</Link></li>\r\n                    <li><Link to=\"/project\">Projects</Link></li>\r\n                    <li><Link to=\"#\">Resume</Link></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar","import React from 'react'\r\nimport './home.css'\r\n\r\nfunction Home(){\r\n    return (\r\n        <div className=\"homePage\">This is home page</div>\r\n    );  \r\n\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport './about.css'\r\n\r\nfunction About(){\r\n    return (\r\n        <div className=\"aboutPage\">\r\n            I am a student at Rutgers University, New Brunswick pursuing a Masters degree in Computer Science with a specialization\r\n            in Machine Learning. My recent experience with Machine Learning is in the domain of Natural Language Processing and\r\n            Knowledge Graphs where I explored ways to rank facts returned for an entity-centric query using a Neural framework.\r\n            Some of my earlier works in Computer Vision include, Image Captioning, Image Style Transfer and MNIST GAN.\r\n            <br></br>\r\n            <br></br>\r\n            Before joining Rutgers, I graduated as a B.Tech in the field of Electronics and Telecommunications Engineering from Veermata\r\n            Jijabai Technological Institute. I have also a one year experience as a full stack developer at Credit Suisse Services Ltd, Pune, India\r\n            working primarily on the frameworks like Angular,Angular.js, Coldfusion and tools like SpringBoot and ElasticSearch.\r\n            My primary choice of coding language is Python, but I am well versed with Java, Javascript and SQL as well.\r\n            <br></br>\r\n            <br></br>\r\n            I am currently working as a TA for the course : Introduction to Computer Applications introducing undergraduate business\r\n            school students the idea of HTML and Javascript and how their interaction can lead to development of powerfull web pages\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default About","import React from 'react'\r\nimport './project.css'\r\n\r\nfunction Project() {\r\n    return (\r\n        <div className=\"aboutPage\">\r\n            <ul>\r\n                <li><b> Fact Ranking for Entity Centric Queries:</b>\r\n                    <ul>\r\n                        <li>Point 1</li>\r\n                        <li>Point 2</li>\r\n                        <li>Point 3</li>\r\n\r\n                    </ul>\r\n                </li>\r\n                <br></br>\r\n            \r\n                <li> <b>Security Information and Event Management :</b>\r\n                    <ul>\r\n                        <li>Point 1</li>\r\n                        <li>Point 2</li>\r\n                        <li>Point 3</li>\r\n\r\n                    </ul>\r\n                </li>\r\n\r\n            <br></br>\r\n                <li> Project 3 :\r\n                    <ul>\r\n                        <li>Point 1</li>\r\n                        <li>Point 2</li>\r\n                        <li>Point 3</li>\r\n\r\n                    </ul>\r\n                </li>\r\n\r\n\r\n            </ul>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Project","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport UserCard from '../userCard/userCard';\r\nimport Home from '../home/home';\r\nimport About from '../about/about'\r\nimport './route.css'\r\nimport Project from '../projects/project';\r\n\r\n\r\nfunction Routes() {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/my-github-io\" component={Home} />\r\n            <Route path=\"/about\" component={About} />\r\n            <Route path=\"/project\" component={Project} />\r\n        </Switch>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Routes","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport UserCard from './components/userCard/userCard'\nimport NavBar from './components/navbar/navbar'\nimport Routes from './components/Route/route'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\n\n\nfunction App() {\n  return (\n    <Router>\n\n      <div className=\"App\">\n        <header className=\"App-header\">\n          \n            {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n          <NavBar />\n          <div className=\"horizontalPlacement\">\n          <UserCard />\n          <Routes className=\"routeLocation\"/>\n\n          </div>\n          \n\n        </header>\n      </div>\n    </Router>\n\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}